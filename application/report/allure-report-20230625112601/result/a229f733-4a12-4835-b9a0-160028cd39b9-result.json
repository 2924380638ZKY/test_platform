{"name": "盒子平台添加IPC", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: headless chrome=114.0.5735.134)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x002FA813+48355]\n\t(No symbol) [0x0028C4B1]\n\t(No symbol) [0x00195358]\n\t(No symbol) [0x00191B33]\n\t(No symbol) [0x00188CA5]\n\t(No symbol) [0x00189D0A]\n\t(No symbol) [0x00189003]\n\t(No symbol) [0x00188355]\n\t(No symbol) [0x001882EC]\n\t(No symbol) [0x00186F26]\n\t(No symbol) [0x00187688]\n\t(No symbol) [0x00196B52]\n\t(No symbol) [0x001ECF01]\n\t(No symbol) [0x001DA73C]\n\t(No symbol) [0x001EC922]\n\t(No symbol) [0x001DA536]\n\t(No symbol) [0x001B82DC]\n\t(No symbol) [0x001B93DD]\n\tGetHandleVerifier [0x0055AABD+2539405]\n\tGetHandleVerifier [0x0059A78F+2800735]\n\tGetHandleVerifier [0x0059456C+2775612]\n\tGetHandleVerifier [0x003851E0+616112]\n\t(No symbol) [0x00295F8C]\n\t(No symbol) [0x00292328]\n\t(No symbol) [0x0029240B]\n\t(No symbol) [0x00284FF7]\n\tBaseThreadInitThunk [0x75A100C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77697B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77697B1E+238]\n\t(No symbol) [0x00000000]", "trace": "self = <application.task_ui.test_ui_task.TestTask object at 0x000002076C33CE50>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dfb73a56c8cfc3171d60c3db5a1b8d4b\")>\ncase = {'abilityModelId': ['645c88fa20b4a5dcc2f6c3d3', 'fc46332d-d2ae-49fe-8310-c27c34a9a482', '4645f6fb-0bd9-46fe-ab86-a64b2...dd8654bc5083733a72e67', 'level': 3}, {'eventId': '645dd88b4bc5083733a72e69', 'level': 4}], 'expectResult': '安装位置', ...}\nnode_url = 'http://10.1.40.228/#/login'\n\n    def test_task(self, drivers, case, node_url):\n        global account1\n        global password1\n        allure.dynamic.title(case[\"caseName\"])\n        allure.dynamic.severity(case[\"priority\"])\n>       drivers.get(node_url)  # case:用例的信息\n\napplication\\task_ui\\test_ui_task.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002076846B2E0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...jectPath [0x77697B4E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77697B1E+238]\\\\n\\\\t(No symbol) [0x00000000]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: headless chrome=114.0.5735.134)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x002FA813+48355]\nE       \t(No symbol) [0x0028C4B1]\nE       \t(No symbol) [0x00195358]\nE       \t(No symbol) [0x00191B33]\nE       \t(No symbol) [0x00188CA5]\nE       \t(No symbol) [0x00189D0A]\nE       \t(No symbol) [0x00189003]\nE       \t(No symbol) [0x00188355]\nE       \t(No symbol) [0x001882EC]\nE       \t(No symbol) [0x00186F26]\nE       \t(No symbol) [0x00187688]\nE       \t(No symbol) [0x00196B52]\nE       \t(No symbol) [0x001ECF01]\nE       \t(No symbol) [0x001DA73C]\nE       \t(No symbol) [0x001EC922]\nE       \t(No symbol) [0x001DA536]\nE       \t(No symbol) [0x001B82DC]\nE       \t(No symbol) [0x001B93DD]\nE       \tGetHandleVerifier [0x0055AABD+2539405]\nE       \tGetHandleVerifier [0x0059A78F+2800735]\nE       \tGetHandleVerifier [0x0059456C+2775612]\nE       \tGetHandleVerifier [0x003851E0+616112]\nE       \t(No symbol) [0x00295F8C]\nE       \t(No symbol) [0x00292328]\nE       \t(No symbol) [0x0029240B]\nE       \t(No symbol) [0x00284FF7]\nE       \tBaseThreadInitThunk [0x75A100C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77697B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77697B1E+238]\nE       \t(No symbol) [0x00000000]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException"}, "attachments": [{"name": "失败截图test_task", "source": "08b3632b-4764-44c9-a7b4-3ba679fe6d1e-attachment.png", "type": "image/png"}], "parameters": [{"name": "case", "value": "{'id': '645dd90f4bc5083733a72e6b', 'abilityModelId': ['645c88fa20b4a5dcc2f6c3d3', 'fc46332d-d2ae-49fe-8310-c27c34a9a482', '4645f6fb-0bd9-46fe-ab86-a64b2d7d4839'], 'login': True, 'caseName': '盒子平台添加IPC', 'priority': 1, 'eventStep': [{'level': 1, 'eventId': '645dd7d34bc5083733a72e63'}, {'level': 2, 'eventId': '645dd7ff4bc5083733a72e65'}, {'level': 3, 'eventId': '645dd8654bc5083733a72e67'}, {'level': 4, 'eventId': '645dd88b4bc5083733a72e69'}], 'testData': {'name': 'admin', 'serial': 'admin'}, 'expectResult': '安装位置'}"}], "start": 1687663590149, "stop": 1687663611199, "uuid": "99729565-0f06-4f7c-ac94-5c6051817fda", "historyId": "8b2efab5831b0377b6b349659393c3bb", "testCaseId": "04338e56f2b64640568628d63c60bb93", "fullName": "application.task_ui.test_ui_task.TestTask#test_task", "labels": [{"name": "severity", "value": 1}, {"name": "parentSuite", "value": "application.task_ui"}, {"name": "suite", "value": "test_ui_task"}, {"name": "subSuite", "value": "TestTask"}, {"name": "host", "value": "DESKTOP-2HK8HF2"}, {"name": "thread", "value": "20632-Thread-4"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "application.task_ui.test_ui_task"}]}